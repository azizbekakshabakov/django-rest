{"ast":null,"code":"var _s = $RefreshSig$();\n// import { AppBarComponent } from \"../mui/app-bar\";\nimport { SideBar } from \"./SideBar\";\nimport { Outlet, useParams } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Grow from '@mui/material/Grow';\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport AppBar from '@mui/material/AppBar';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { useDB } from './db-hook';\nimport Grid from '@mui/material/Grid';\n\n// const drawerWidth = 240;\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Channel = () => {\n  _s();\n  const {\n    result,\n    error\n  } = useDB(`http://127.0.0.1:8000/api/v1/video/?user=${useParams()['characterid']}`);\n  if (result === undefined) console.log('load');else {\n    console.log(result);\n  }\n  if (result === undefined) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"a\"\n  }, void 0, false);\n\n  // return (\n  //     <>\n  //     {/* <AppBarComponent/> */}\n  //     <CssBaseline />\n  //     {/* <Grow in={true}> */}\n\n  //         <Box sx={{ display: 'flex' }}>\n  //             <CssBaseline />\n  //             <AppBar position=\"fixed\" sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}>\n  //                 <Toolbar>\n  //                 <Typography variant=\"h6\" noWrap component=\"div\">\n  //                     Clipped drawer\n  //                 </Typography>\n  //                 </Toolbar>\n  //             </AppBar>\n  //             {/* Users list */}\n  //             <SideBar /> \n  //             <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n  //                 <Toolbar />\n  //                 <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n  //                     {Array.from(Array(6)).map((_, index) => (\n  //                         <Grid item xs={2} sm={4} md={4} key={index}>\n  //                             <div>asdf</div>\n  //                         </Grid>\n  //                     ))}\n  //                 </Grid>\n  //             </Box>\n  //         </Box>\n\n  //     {/* </Grow> */}\n  //     </>\n  // );\n};\n_s(Channel, \"eOZTzlEvb/8OJzYd/H7FhyFslUU=\", false, function () {\n  return [useDB, useParams];\n});\n_c = Channel;\nvar _c;\n$RefreshReg$(_c, \"Channel\");","map":{"version":3,"names":["SideBar","Outlet","useParams","useState","Grow","React","Box","AppBar","CssBaseline","Toolbar","Typography","useDB","Grid","Fragment","_Fragment","jsxDEV","_jsxDEV","Channel","_s","result","error","undefined","console","log","children","_c","$RefreshReg$"],"sources":["/home/aziz/Work/Python/Django/video-rest/front/src/component/Channel.jsx"],"sourcesContent":["// import { AppBarComponent } from \"../mui/app-bar\";\nimport { SideBar } from \"./SideBar\";\nimport { Outlet, useParams } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Grow from '@mui/material/Grow';\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport AppBar from '@mui/material/AppBar';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { useDB } from './db-hook';\nimport Grid from '@mui/material/Grid';\n\n// const drawerWidth = 240;\n\nexport const Channel = () => {\n\n    const { result, error } = useDB(`http://127.0.0.1:8000/api/v1/video/?user=${useParams()['characterid']}`);\n\n    if (result === undefined) console.log('load');\n    else {\n        console.log(result);\n    }\n\n    if (result === undefined) return (\n        <>a</>\n    );\n\n    // return (\n    //     <>\n    //     {/* <AppBarComponent/> */}\n    //     <CssBaseline />\n    //     {/* <Grow in={true}> */}\n                \n                \n    //         <Box sx={{ display: 'flex' }}>\n    //             <CssBaseline />\n    //             <AppBar position=\"fixed\" sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}>\n    //                 <Toolbar>\n    //                 <Typography variant=\"h6\" noWrap component=\"div\">\n    //                     Clipped drawer\n    //                 </Typography>\n    //                 </Toolbar>\n    //             </AppBar>\n    //             {/* Users list */}\n    //             <SideBar /> \n    //             <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n    //                 <Toolbar />\n    //                 <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n    //                     {Array.from(Array(6)).map((_, index) => (\n    //                         <Grid item xs={2} sm={4} md={4} key={index}>\n    //                             <div>asdf</div>\n    //                         </Grid>\n    //                     ))}\n    //                 </Grid>\n    //             </Box>\n    //         </Box>\n            \n    //     {/* </Grow> */}\n    //     </>\n    // );\n}"],"mappings":";AAAA;AACA,SAASA,OAAO,QAAQ,WAAW;AACnC,SAASC,MAAM,EAAEC,SAAS,QAAQ,kBAAkB;AACpD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,KAAK,QAAQ,WAAW;AACjC,OAAOC,IAAI,MAAM,oBAAoB;;AAErC;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEzB,MAAM;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGT,KAAK,CAAE,4CAA2CT,SAAS,EAAE,CAAC,aAAa,CAAE,EAAC,CAAC;EAEzG,IAAIiB,MAAM,KAAKE,SAAS,EAAEC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC,CAAC,KACzC;IACDD,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;EACvB;EAEA,IAAIA,MAAM,KAAKE,SAAS,EAAE,oBACtBL,OAAA,CAAAF,SAAA;IAAAU,QAAA,EAAE;EAAC,iBAAG;;EAGV;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;AACJ,CAAC;AAAAN,EAAA,CA9CYD,OAAO;EAAA,QAEUN,KAAK,EAA6CT,SAAS;AAAA;AAAAuB,EAAA,GAF5ER,OAAO;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}